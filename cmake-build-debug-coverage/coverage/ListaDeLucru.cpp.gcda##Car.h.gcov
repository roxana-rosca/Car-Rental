        -:    0:Source:C:/Users/roxan/CLionProjects/oop/inchiriere_masini/Car.h
        -:    0:Graph:C:\Users\roxan\CLionProjects\oop\inchiriere_masini\cmake-build-debug-coverage\CMakeFiles\inchiriere_masini.dir\ListaDeLucru.cpp.gcno
        -:    0:Data:C:\Users\roxan\CLionProjects\oop\inchiriere_masini\cmake-build-debug-coverage\CMakeFiles\inchiriere_masini.dir\ListaDeLucru.cpp.gcda
        -:    0:Runs:1
        -:    1:#pragma once
        -:    2:#include <iostream>
        -:    3:#include <string>
        -:    4:#include <utility>
        -:    5:
        -:    6:using std::string;
        -:    7:using std::endl;
        -:    8:using std::cout;
        -:    9:
        -:   10:
        -:   11:class Car {
        -:   12:private:
        -:   13:    string nr_inmatriculare;
        -:   14:    string producator;
        -:   15:    string model;
        -:   16:    string tip;
        -:   17:public:
        -:   18:    Car() = default;
        -:   19:
        -:   20:    // Constructor
        -:   21:    Car(string  nr_i,string  p, string m, string  t): nr_inmatriculare{std::move(nr_i)},producator{std::move(p)},model{std::move(m)},tip{std::move(t)}{};
        -:   22:
        -:   23:    // Constructor de copiere
function _ZN3CarC1ERKS_ called 0 returned 0% blocks executed 0%
    #####:   24:    Car(const Car& ot): nr_inmatriculare{ot.nr_inmatriculare}, producator{ot.producator}, model{ot.model}, tip{ot.tip}{
    %%%%%:   24-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:   24-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:   24-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
        -:   25:        //cout<<"Copy constructor called."<<endl;
    #####:   26:    };
    %%%%%:   26-block  0
    $$$$$:   26-block  1
call    0 never executed
    $$$$$:   26-block  2
call    1 never executed
    $$$$$:   26-block  3
call    2 never executed
        -:   27:
        -:   28:    // gettere
        -:   29:    [[nodiscard]] string get_nr_inmatriculare() const;
        -:   30:    [[nodiscard]] string get_producator() const;
        -:   31:    [[nodiscard]] string get_tip() const;
        -:   32:    [[nodiscard]] string get_model() const;
        -:   33:
        -:   34:    // settere
        -:   35:    void set_nr_inmatriculare(string new_nr_inmatriculare);
        -:   36:    void set_producator(string new_producator);
        -:   37:    void set_tip(string new_tip);
        -:   38:    void set_model(string new_model);
        -:   39:
        -:   40:};
        -:   41:
        -:   42:/*
        -:   43: * Compara 2 masini dupa numarul de inmatriculare
        -:   44: *
        -:   45: * @return: true daca codurile ascii ale nr de inm al masinii c1 sunt mai mici decat codurile ascii ale nr de inm al masinii c2,
        -:   46: *          false altfel
        -:   47: */
        -:   48:bool cmpNrInmatriculare(const Car& c1, const Car &c2);
        -:   49:
        -:   50:/*
        -:   51: * Compara 2 masini dupa tipul acestora
        -:   52: *
        -:   53: * @return: true daca codurile ascii ale tipului masinii c1 sunt mai mici decat codurile ascii ale tipului masinii c2,
        -:   54: *          false altfel
        -:   55: */
        -:   56:bool cmpTip(const Car& c1, const Car &c2);
        -:   57:
        -:   58:/*
        -:   59: * Compara 2 masini dupa producatorul si modelul acestora
        -:   60: *
        -:   61: * @return: true daca c1 < c2 (ordonare alfabetica),
        -:   62: *          false altfel
        -:   63: */
        -:   64:bool cmpProdModel(const Car& c1, const Car &c2);
        -:   65:
        -:   66:void testeDomain();
        -:   67:
        -:   68:
        -:   69:
