        -:    0:Source:C:/Users/roxan/CLionProjects/oop/inchiriere_masini/VectorDinamicTemplate.cpp
        -:    0:Graph:C:\Users\roxan\CLionProjects\oop\inchiriere_masini\cmake-build-debug-coverage\CMakeFiles\inchiriere_masini.dir\VectorDinamicTemplate.cpp.gcno
        -:    0:Data:C:\Users\roxan\CLionProjects\oop\inchiriere_masini\cmake-build-debug-coverage\CMakeFiles\inchiriere_masini.dir\VectorDinamicTemplate.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "VectorDinamicTemplate.h"
        -:    2:
        -:    3:
function _Z17testVectorDinamicv called 1 returned 100% blocks executed 77%
        1:    4:void testVectorDinamic(){
        1:    5:    VectorDinamic<int> v;
        1:    5-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:    6:    v.add(1);
        1:    6-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:    7:    v.add(2);
        1:    7-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:    8:    v.add(3);
        1:    8-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:    9:
        1:   10:    int i=1;
        4:   11:    for(auto x:v){
        1:   11-block  0
call    0 returned 1
call    1 returned 1
        3:   11-block  1
call    2 returned 3
branch  3 taken 3 (fallthrough)
branch  4 taken 0 (throw)
        4:   11-block  2
call    5 returned 4
branch  6 taken 3
branch  7 taken 1 (fallthrough)
       3*:   12:        assert(i==x);
        3:   12-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 3
    %%%%%:   12-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
        3:   12-block  2
    %%%%%:   12-block  3
        3:   13:        i++;
        3:   13-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        -:   14:    }
        -:   15:
        1:   16:    i=1;
        1:   17:    IteratorVector<int>it{v};
        1:   17-block  0
call    0 returned 1
        4:   18:    while(it != v.end()){
        4:   18-block  0
call    0 returned 4
call    1 returned 4
branch  2 taken 3
branch  3 taken 1 (fallthrough)
       3*:   19:        assert((*it) == i);
        3:   19-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   19-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 3
    %%%%%:   19-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        3:   19-block  3
    %%%%%:   19-block  4
        3:   20:        i++;
        3:   21:        ++it;
        3:   21-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        -:   22:    }
        -:   23:
        1:   24:    i=1;
        1:   25:    IteratorVector<int> it2{v};
        1:   25-block  0
call    0 returned 1
        4:   26:    while(it2.valid())
        4:   26-block  0
call    0 returned 4
branch  1 taken 3
branch  2 taken 1 (fallthrough)
        -:   27:    {
       3*:   28:        assert(it2.element() == i);
        3:   28-block  0
call    0 returned 3
branch  1 taken 0 (fallthrough)
branch  2 taken 3
    %%%%%:   28-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        3:   28-block  2
    %%%%%:   28-block  3
        3:   29:        i++;
        3:   30:        it2.next();
        3:   30-block  0
call    0 returned 3
        -:   31:    }
        -:   32:
        1:   33:    v.erase(0);
        1:   33-block  0
call    0 returned 1
       1*:   34:    assert(v.size() == 2);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   34-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
        1:   34-block  1
    %%%%%:   34-block  2
        1:   35:}
        1:   35-block  0
call    0 returned 1
    $$$$$:   35-block  1
call    1 never executed
        -:   36:
function _Z22testAssignmentOperatorv called 1 returned 100% blocks executed 72%
        1:   37:void testAssignmentOperator() {
        1:   38:    VectorDinamic<int> v1;
        1:   38-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   39:    VectorDinamic<int> v2;
        1:   39-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   40:
        1:   41:    v1.add(1);
        1:   41-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   42:    v1.add(2);
        1:   42-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   43:
        1:   44:    v2 = v2;
        1:   44-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   45:    v2 = v1;
        1:   45-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   46:    assert(v2.size() == 2);
        1:   46-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   46-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        1:   46-block  2
    %%%%%:   46-block  3
        -:   47:
        1:   48:    v1.add(3);
        1:   48-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   49:    v1.add(4);
        1:   49-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   50:    v1.add(5);
        1:   50-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   51:    v1.add(6);
        1:   51-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   52:    v1.add(7);
        1:   52-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   53:    assert(v1.size() == 7);
        1:   53-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   53-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        1:   53-block  2
    %%%%%:   53-block  3
        1:   54:}
        1:   54-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:   54-block  1
call    2 never executed
    $$$$$:   54-block  2
call    3 never executed
